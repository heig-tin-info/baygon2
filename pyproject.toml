[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "baygon"
version = "0.6.0"
description = "Agnostic CLI tester with a simple DSL and readable output"
readme = "README.md"
authors = [
  { name = "Yves Chevallier", email = "yves.chevallier@heig-vd.ch" },
]
license = { text = "MIT" }
requires-python = ">=3.10"
keywords = ["testing", "functional-testing", "cli", "education"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Testing",
]
# Minimal dependencies for schema.py
# (the rest will be added when the runner/CLI is implemented)
dependencies = [
  "pydantic>=2.7",
  "regex>=2024.5.15",
  "PyYAML>=6.0",
  "rich>=13.0",
  "typer>=0.12",
]

[project.optional-dependencies]
# Dependencies used to develop and run the unit tests
# Use: `pip install -e .[dev]` or `uv pip install -e .[dev]`
dev = [
  "pytest>=8.3",
  "pytest-cov>=5.0",
  "ruff>=0.6",
]
# Dependencies to build the documentation
docs = [
  "mkdocs>=1.6,<2.0",
  "mkdocs-material[imaging]>=9.5,<10.0",
]

[project.urls]
Homepage = "https://github.com/heig-tin-info/baygon"
Documentation = "https://heig-tin-info.github.io/baygon/"
Source = "https://github.com/heig-tin-info/baygon"
Issues = "https://github.com/heig-tin-info/baygon/issues"

[project.scripts]
baygon = "baygon.cli:run"

[tool.hatch.build]
# src/ layout
include = ["src/baygon", "README.md", "LICENSE", "tests"]

[tool.hatch.build.targets.wheel]
packages = ["src/baygon"]

[tool.ruff]
line-length = 100
target-version = "py310"
# Also enable the integrated formatter (avoids Black)

[tool.ruff.lint]
extend-select = ["I"]
select = [
  "E", "F", "W",  # pycodestyle/pyflakes
  "I",              # isort
  "UP",             # pyupgrade
  "B",              # bugbear
  "SIM",            # simplify
  "RUF",            # ruff-specific
]
ignore = [
  "E501",   # line too long (left to the formatter)
]

[tool.pytest.ini_options]
addopts = [
  "-q",
  "--cov=baygon",
  "--cov-report=term-missing",
]
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.coverage.run]
branch = true
source = ["baygon"]

[tool.coverage.report]
show_missing = true
skip_covered = false

# Optional uv support: declare extras installable via `uv pip`
[tool.uv]

[dependency-groups]
dev = [
    "cairosvg>=2.8.2",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.21",
    "pillow>=11.3.0",
]
# Nothing mandatory here; uv reads the PEP 621 dependencies
